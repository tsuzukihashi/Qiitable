///
/// @Generated by Mockolo
///



import Combine
import Foundation
@testable import Qiitable


class ConnectionMock: Connection {
    init() { }
    init(session: URLSession) {
        self._session = session
    }


    var sessionSetCallCount = 0
    private var _session: URLSession!  { didSet { sessionSetCallCount += 1 } }
    var session: URLSession {
        get { return _session }
        set { _session = newValue }
    }

    var callCallCount = 0
    var callHandler: ((Any) -> (Any))?
    func call<T, V>(request: T) -> AnyPublisher<V, Error> {
        callCallCount += 1
        if let callHandler = callHandler {
            return callHandler(request) as! AnyPublisher<V, Error>
        }
        fatalError("callHandler returns can't have a default value thus its handler must be set")
    }
}

